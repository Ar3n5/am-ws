apiVersion: v1
kind: Service
metadata:
  name: am-api
  namespace: am-web
spec:
  selector:
    app: am-api
  ports:
    - name: http
      port: 8000
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: am-api
  namespace: am-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: am-api
  template:
    metadata:
      labels:
        app: am-api
    spec:
      containers:
        - name: api
          image: am-ws-api:latest   # loaded into kind (no registry needed)
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: DB_HOST
              value: am-postgres
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: am-db-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: am-db-secret
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: am-db-secret
                  key: DB_NAME
          readinessProbe:
            httpGet:
              path: /api/name
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/container
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: am-api